{"version":3,"sources":["utils.ts","constants.js","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","START","Pagination","total","perPage","currentPage","onPageChange","firstItem","lastItem","items","map","amountPages","Math","ceil","amountPagesArr","amountItemsOnPage","slice","className","cn","disabled","href","onClick","pageItem","active","item","App","useState","setCurrentPage","setPerPage","min","id","value","onChange","event","target","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"kNAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,ECPF,IAAMG,EACG,GADHA,EAEL,EAFKA,EAGG,E,OCWHC,EAA8B,SAAC,GAOrC,IANLC,EAMI,EANJA,MACAC,EAKI,EALJA,QACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,UACAC,EACI,EADJA,SAEMC,EAAQd,EAAW,EAAGQ,GACzBO,KAAI,SAAAX,GAAC,qBAAYA,MAEdY,EAAcC,KAAKC,KAAKV,EAAQC,GAChCU,EAAiBnB,EAAW,EAAGgB,GAC/BI,EAAoB,YAAIN,GAAOO,MAAMT,EAAY,EAAGC,GAc1D,OACE,qCACE,qBAAIS,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAC7BC,SAAUd,IAAgBJ,IAD5B,SAIE,mBACE,UAAQ,WACRgB,UAAU,YACVG,KAAK,QACL,gBAAef,IAAgBJ,EAC/BoB,QAxBO,WACXhB,IAAgBJ,GAClBK,EAAaD,EAAc,IAiBvB,oBAWDS,EAAeJ,KAAI,SAAAY,GAAQ,OAC1B,oBACEL,UAAWC,IAAG,YAAa,CAAEK,OAAQD,IAAajB,IADpD,SAIE,mBACE,UAAQ,WACRY,UAAU,YACVG,KAAI,WAAME,GACVD,QAAS,kBAAMf,EAAagB,IAJ9B,SAMGA,KAREA,MAaT,oBAAIL,UAAWC,IAAG,YAAa,CAC7BC,SAAUd,IAAgBM,IAD5B,SAIE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAAef,IAAgBM,EAC/BU,QAjDO,WACXhB,IAAgBM,GAClBL,EAAaD,EAAc,IA0CvB,uBAWJ,6BACGU,EAAkBL,KAAI,SAAAc,GAAI,OACzB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCvFrBC,EAAgB,WAC3B,MAAsCC,mBAASzB,GAA/C,mBAAOI,EAAP,KAAoBsB,EAApB,KACA,EAA8BD,mBAASzB,GAAvC,mBAAOG,EAAP,KAAgBwB,EAAhB,KAEMrB,EAAYN,EAAaG,GAAWC,EAAcJ,GAClDO,EAAWI,KAAKiB,IACnBzB,EAAUA,GAAWC,EAAcJ,GAAcA,GAQpD,OACE,sBAAKgB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWZ,EADX,mBACiCE,EADjC,cACgDC,EADhD,aAIA,sBAAKS,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRa,GAAG,kBACHb,UAAU,eACVc,MAAO3B,EACP4B,SApBQ,SAACC,GACjBL,GAAYK,EAAMC,OAAOH,OACzBJ,EAAe1B,IAaT,UAOE,wBAAQ8B,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBlB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEd,MAAOF,EACPG,QAASA,EACTC,YAAaA,EACbC,aAAcqB,EACdpB,UAAWA,EACXC,SAAUA,QCnDlB4B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e92956c6.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","export const START = {\n  NUMBER_ITEMS: 42,\n  PAGE: 1,\n  AMOUNT_ITEMS: 5,\n};\n","import cn from 'classnames';\nimport React from 'react';\nimport { getNumbers } from '../../utils';\nimport { START } from '../../constants';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n  firstItem: number;\n  lastItem: number;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n  firstItem,\n  lastItem,\n}) => {\n  const items = getNumbers(1, total)\n    .map(n => `Item ${n}`);\n\n  const amountPages = Math.ceil(total / perPage);\n  const amountPagesArr = getNumbers(1, amountPages);\n  const amountItemsOnPage = [...items].slice(firstItem - 1, lastItem);\n\n  const prevPage = () => {\n    if (currentPage !== START.PAGE) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const nextPage = () => {\n    if (currentPage !== amountPages) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={cn('page-item', {\n          disabled: currentPage === START.PAGE,\n        })}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === START.PAGE}\n            onClick={prevPage}\n          >\n            «\n          </a>\n        </li>\n\n        {amountPagesArr.map(pageItem => (\n          <li\n            className={cn('page-item', { active: pageItem === currentPage })}\n            key={pageItem}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${pageItem}`}\n              onClick={() => onPageChange(pageItem)}\n            >\n              {pageItem}\n            </a>\n          </li>\n        ))}\n\n        <li className={cn('page-item', {\n          disabled: currentPage === amountPages,\n        })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === amountPages}\n            onClick={nextPage}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {amountItemsOnPage.map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { START } from './constants';\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(START.PAGE);\n  const [perPage, setPerPage] = useState(START.AMOUNT_ITEMS);\n\n  const firstItem = START.PAGE + perPage * (currentPage - START.PAGE);\n  const lastItem = Math.min(\n    (perPage + perPage * (currentPage - START.PAGE)), START.NUMBER_ITEMS,\n  );\n\n  const countPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(START.PAGE);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem} - ${lastItem} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={countPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={START.NUMBER_ITEMS}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n        firstItem={firstItem}\n        lastItem={lastItem}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}